1. buat "Dockerfile" -> UBAH DIR SESUAI NAMA PROJ

FROM mcr.microsoft.com/dotnet/aspnet:5.0 AS base
WORKDIR /app
EXPOSE 80
EXPOSE 443
EXPOSE 48719
EXPOSE 27017
EXPOSE 5000
EXPOSE 5001


FROM mcr.microsoft.com/dotnet/sdk:5.0 AS build
WORKDIR /src
COPY . .

#COPY ["CoreWebApi/CoreWebApi.csproj", "CoreWebApi/"]
#RUN dotnet restore "CoreWebApi/CoreWebApi.csproj"
#COPY . .
#WORKDIR "/src/CoreWebApi"
#RUN dotnet build "CoreWebApi.csproj" -c Release -o /app/build

RUN dotnet restore 
RUN dotnet build --no-restore -c Release -o /app

FROM build AS publish
RUN dotnet publish "PaymentAPI.csproj" -c Release -o /app/publish

FROM base AS final
WORKDIR /app
#COPY --from=publish /app/publish .
COPY --from=publish /app/ .
#ENTRYPOINT ["dotnet", "CoreWebApi.dll"]
CMD ASPNETCORE_URLS=http://*:$PORT dotnet PaymentAPI.dll

2. buat ".dockerignore"

**/.classpath
**/.dockerignore
**/.env
**/.git
**/.gitignore
**/.project
**/.settings
**/.toolstarget
**/.vs
**/.vscode
*/.*proj.user
*/.dbmdl
*/.jfm
**/azds.yaml
**/bin
**/charts
*/docker-compose
*/Dockerfile
**/node_modules
**/npm-debug.log
**/obj
**/secrets.dev.yaml
**/values.dev.yaml
LICENSE
README.md


selanjutnya:

1. buat image docker 
				"docker build -t [nama_app_anda]:dev ." 

2. jalankan container docker untuk cek apakah docker sudah jalan
				"docker run -d  -p 5000:80 --name [nama_container_yang_akan_dibuat] [nama_image_yang_telah_dibuat]:dev" 

3. push ke git branch development>masuk kedalam heroku kemudian buat app baru. > connect ke git>

4. set buildpak heroku dengan menggunakan cli heroku
      masuk ke terminal "heroku login"
      kemudian remote app heroku yang telah dibuat "heroku git:remote -a syahfareizi-corewebapi"
      setelah berhasil remote update buildpak: "heroku buildpacks:set jincod/dotnetcore"

5. push aplikasi kita ke repository baru ( yang di push termasuk .sln ) pada branch development

6. hubungkan repo yang telah terisi aplikasi kita dengan appheroku 
			masuk kedalam dashboard heroku ( pastikan ada free akun dan telah login )
      pilih connect github, kemudian pilih repo yang telah berisi aplikasi.
      
7. matikan fitur automatic deploy apabila branch belum terpisah

8. pilih branch tempat aplikasi dan kemudian deploy 

9. jalankan di web. 

10. selesai 

